services:
  postgres:
    image: postgres:15-alpine
    container_name: flyjourney_postgres
    environment:
      POSTGRES_DB: ${DB_Name}
      POSTGRES_USER: ${DB_User}
      POSTGRES_PASSWORD: ${DB_Pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - flyjourney_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: flyjourney_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flyjourney_network
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: vikhang21/fly_journey:1.0.0
    container_name: flyjourney_backend
    environment:
      DB_HOST: ${DB_Host}      
      DB_PORT: ${DB_Port}     
      DB_NAME: ${DB_Name}
      DB_USER: ${DB_User}
      DB_PASS: ${DB_Pass}
      REDIS_HOST: redis            
      REDIS_PORT: 6379            
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USER: ${email_user}
      PASSWORD_USER: ${password_user}
      EMAIL_HOST: ${email_host}
      EMAIL_PORT: ${email_port}
      ACCOUNT_SID: ${account_SID}
      AUTH_TOKEN: ${auth_token}
      TWILIO_PHONE: ${twilio_phone}
      GIN_MODE: release
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - postgres
    networks:
      - flyjourney_network
    restart: unless-stopped
    volumes:
      - ./logs:/root/logs

  jenkins:
    image: jenkins/jenkins:lts
    container_name: flyjourney_jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - flyjourney_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  jenkins_home:
    driver: local

networks:
  flyjourney_network:
    driver: bridge